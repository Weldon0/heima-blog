import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as c,c as l,a as n,b as e,F as i,e as s,d as a}from"./app.696268bf.js";const u={},r=s(`<h2 id="\u9879\u76EE\u6539\u9020" tabindex="-1"><a class="header-anchor" href="#\u9879\u76EE\u6539\u9020" aria-hidden="true">#</a> \u9879\u76EE\u6539\u9020</h2><h2 id="\u6539\u9020\u5EFA\u8BAE" tabindex="-1"><a class="header-anchor" href="#\u6539\u9020\u5EFA\u8BAE" aria-hidden="true">#</a> \u6539\u9020\u5EFA\u8BAE</h2><ol><li>\u9879\u76EE\u4E2D\u4F7F\u7528 TS \u65F6\uFF0C\u65E2\u53EF\u4EE5\u5305\u542B js \u6587\u4EF6\uFF0C\u53C8\u53EF\u4EE5\u5305\u542B ts \u6587\u4EF6</li></ol><ul><li><code>.js</code>\u3001<code>.jsx</code>\uFF08\u4F7F\u7528 JS \u65F6\uFF0CReact \u7EC4\u4EF6\u5BF9\u5E94\u7684\u6587\u4EF6\u540E\u7F00\uFF09</li><li><code>.ts</code>\u3001<code>.tsx</code>\uFF08\u4F7F\u7528 TS \u65F6\uFF0CReact \u7EC4\u4EF6\u5BF9\u5E94\u7684\u6587\u4EF6\u540E\u7F00\uFF09\u3001<code>.d.ts</code></li></ul><ol start="2"><li>\u5728\u5DF2\u6709\u9879\u76EE\u4E2D\uFF0C\u6DFB\u52A0 TS \u65F6\u7684\u63A8\u8350\u6A21\u5F0F</li></ol><ul><li>\u65B0\u7684\u529F\u80FD\u7528 TS</li><li>\u5DF2\u5B9E\u73B0\u7684\u529F\u80FD\uFF0C\u53EF\u4EE5\u7EE7\u7EED\u4FDD\u6301 JS \u6587\u4EF6\uFF0C\u6162\u6162\u4FEE\u6539\u4E3A TS \u5373\u53EF</li></ul><ol start="3"><li>React \u7EC4\u4EF6\u5BF9\u5E94\u7684\u6587\u4EF6\u540E\u7F00\uFF0C\u4FEE\u6539\u4E3A\uFF1A<code>.tsx</code></li><li>\u5DE5\u5177\u51FD\u6570\u5BF9\u5E94\u7684\u6587\u4EF6\u540E\u7F00\uFF0C\u4FEE\u6539\u4E3A\uFF1A<code>.ts</code> \u6216\u8005\u4E3A\u5176\u6DFB\u52A0\u7C7B\u578B\u58F0\u660E\u6587\u4EF6 <code>.d.ts</code></li></ol><h2 id="\u4FEE\u6539\u5165\u53E3\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u6539\u5165\u53E3\u6587\u4EF6" aria-hidden="true">#</a> \u4FEE\u6539\u5165\u53E3\u6587\u4EF6</h2><h3 id="index-ts" tabindex="-1"><a class="header-anchor" href="#index-ts" aria-hidden="true">#</a> index.ts</h3><ul><li>\u76F4\u63A5\u5C06\u6587\u4EF6\u540E\u7F00\u4FEE\u6539\u4E3A index.tsx \u5373\u53EF</li><li>\u9700\u8981\u91CD\u542F\u9879\u76EE</li></ul><h2 id="\u4FEE\u6539app-js" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u6539app-js" aria-hidden="true">#</a> \u4FEE\u6539App.js</h2><ul><li>\u8BB2App.js \u6539\u6210app.tsx\u5373\u53EF</li><li>\u9700\u8981\u5B89\u88C5react-router-dom\u7684\u7C7B\u578B</li></ul><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code>yarn add <span class="token decorator"><span class="token at operator">@</span><span class="token function">types</span></span><span class="token operator">/</span>react<span class="token operator">-</span>router<span class="token operator">-</span>dom
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>\u91CD\u542F</li></ul><h1 id="utils\u5DE5\u5177\u51FD\u6570\u6539\u9020" tabindex="-1"><a class="header-anchor" href="#utils\u5DE5\u5177\u51FD\u6570\u6539\u9020" aria-hidden="true">#</a> utils\u5DE5\u5177\u51FD\u6570\u6539\u9020</h1><h2 id="history-js" tabindex="-1"><a class="header-anchor" href="#history-js" aria-hidden="true">#</a> history.js</h2><p>\u4E0D\u9700\u8981\u6539\u9020\uFF0C\u76F4\u63A5\u628Ajs\u6539\u6210ts\u5373\u53EF</p><h2 id="storage-js" tabindex="-1"><a class="header-anchor" href="#storage-js" aria-hidden="true">#</a> storage.js</h2><ul><li>\u8BB2js\u6539\u6210ts</li><li>\u4FEE\u6539getTokenInfo</li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">/**
 * \u4ECE\u672C\u5730\u7F13\u5B58\u4E2D\u83B7\u53D6 Token \u4FE1\u606F
 * JSON.parse() \u8981\u6C42\u53C2\u6570\u5FC5\u987B\u662F\u5B57\u7B26\u4E32
 * localStorage.getItem() \u8FD4\u56DE\u503C\u53EF\u80FD\u662F\u5B57\u7B26\u4E32\uFF0C\u4E5F\u53EF\u80FD\u662Fnull\uFF0C\u6240\u4EE5\u4F1A\u62A5\u9519
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getTokenInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token constant">TOKEN_KEY</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;{}&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u975E\u7A7A\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u975E\u7A7A\u65AD\u8A00" aria-hidden="true">#</a> \u975E\u7A7A\u65AD\u8A00</h3>`,21),k={href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html#non-null-assertion-operator",target:"_blank",rel:"noopener noreferrer"},d=a("Non-null assertion operator"),v=s(`<ul><li>TS \u4E2D\u63D0\u4F9B\u4E00\u4E2A\u8FD0\u7B97\u7B26\uFF1A<code>!</code> <code>\u975E\u7A7A\u65AD\u8A00</code><ul><li>\u5982\u679C\u4E00\u4E2A\u503C\uFF0C\u5B83\u7684\u7C7B\u578B\u53EF\u80FD\u662F null \u6216 undefined\uFF0C\u4F46\u662F\uFF0C\u6211\u4EEC\u5728\u4F7F\u7528\u65F6\u53C8\u5F88\u786E\u5B9A\u5B83\u7684\u503C\u4E00\u5B9A\u4E0D\u662F null \u6216 unde\uFF0C\u6B64\u65F6\uFF0C\u5C31\u53EF\u4EE5\u901A\u8FC7 <code>\u975E\u7A7A\u65AD\u8A00</code> \u6765\u544A\u8BC9 TS \u542C\u54E5\u7684\uFF0C\u54E5\u5F88\u786E\u5B9A\u5B83\u7684\u4E0D\u662F null \u6216 undefined</li></ul></li><li>\u6CE8\u610F\uFF1A<strong>\u8FD9\u4E2A\u64CD\u4F5C\u662F\u98CE\u9669\u7684</strong>\uFF0C\u975E\u7A7A\u65AD\u8A00\uFF0C\u4EC5\u4EC5\u662F\u8BA9 TS \u4E2D\u7684\u7C7B\u578B\u68C0\u67E5\u4E0D\u518D\u6821\u9A8C null \u6216 undefined\uFF0C\u4F46\u662F\uFF0C\u5982\u679C\u5B83\u7684\u503C\u771F\u7684\u662F null \u6216 undefined\uFF0C\u4EE3\u7801\u4F1A\u5728\u8FD0\u884C\u65F6\u62A5\u9519\uFF01\uFF01\uFF01</li></ul><h3 id="\u6574\u4F53\u4FEE\u6539" tabindex="-1"><a class="header-anchor" href="#\u6574\u4F53\u4FEE\u6539" aria-hidden="true">#</a> \u6574\u4F53\u4FEE\u6539</h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// \u7528\u6237 Token \u7684\u672C\u5730\u7F13\u5B58\u952E\u540D</span>
<span class="token keyword">const</span> <span class="token constant">TOKEN_KEY</span> <span class="token operator">=</span> <span class="token string">&#39;geek-itcast-21&#39;</span>
<span class="token keyword">const</span> <span class="token constant">CHANNEL_KEY</span> <span class="token operator">=</span> <span class="token string">&#39;geek-itcast-21-channels&#39;</span>
type Token <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">token</span><span class="token operator">:</span> string
  <span class="token literal-property property">refresh_token</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
type Channels <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> number
  <span class="token literal-property property">name</span><span class="token operator">:</span> string
<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token comment">/**
 * \u4ECE\u672C\u5730\u7F13\u5B58\u4E2D\u83B7\u53D6 Token \u4FE1\u606F
 * JSON.parse() \u8981\u6C42\u53C2\u6570\u5FC5\u987B\u662F\u5B57\u7B26\u4E32
 * localStorage.getItem() \u8FD4\u56DE\u503C\u53EF\u80FD\u662F\u5B57\u7B26\u4E32\uFF0C\u4E5F\u53EF\u80FD\u662Fnull\uFF0C\u6240\u4EE5\u4F1A\u62A5\u9519
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> getTokenInfo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">Token</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token constant">TOKEN_KEY</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u5C06 Token \u4FE1\u606F\u5B58\u5165\u7F13\u5B58
 * @param {Object} tokenInfo \u4ECE\u540E\u7AEF\u83B7\u53D6\u5230\u7684 Token \u4FE1\u606F
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> setTokenInfo <span class="token operator">=</span> <span class="token punctuation">(</span>tokenInfo<span class="token operator">:</span> Token<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter"><span class="token keyword">void</span></span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token constant">TOKEN_KEY</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>tokenInfo<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u5220\u9664\u672C\u5730\u7F13\u5B58\u4E2D\u7684 Token \u4FE1\u606F
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">removeTokenInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token constant">TOKEN_KEY</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u5224\u65AD\u672C\u5730\u7F13\u5B58\u4E2D\u662F\u5426\u5B58\u5728 Token \u4FE1\u606F
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> hasToken <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">boolean</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token function">getTokenInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>token
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u4FDD\u5B58\u9891\u9053\u6570\u636E\u5230\u672C\u5730
 * @param {*} channels
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> setLocalChannels <span class="token operator">=</span> <span class="token punctuation">(</span>channels<span class="token operator">:</span> Channels<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter"><span class="token keyword">void</span></span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token constant">CHANNEL_KEY</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>channels<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u83B7\u53D6\u672C\u5730\u7684\u9891\u9053\u6570\u636E\uFF0C\uFF0C\uFF0C\uFF0C\uFF0C\uFF0C\uFF0C\u5982\u679C\u6CA1\u6709\u6570\u636E\uFF0C\u4E0D\u8981\u9ED8\u8BA4\u4E3A\u7A7A\u6570\u7EC4
 * @returns
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> getLocalChannels <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">Channels</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token constant">CHANNEL_KEY</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u5220\u9664\u672C\u5730\u7684\u9891\u9053\u6570\u636E
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> removeLocalChannels <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter"><span class="token keyword">void</span></span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token constant">CHANNEL_KEY</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="request-js\u6539\u9020" tabindex="-1"><a class="header-anchor" href="#request-js\u6539\u9020" aria-hidden="true">#</a> request.js\u6539\u9020</h2><p>\u8BB2js\u6539\u6210ts\u5373\u53EF</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">async</span> <span class="token punctuation">(</span>err<span class="token operator">:</span> AxiosError<span class="token operator">&lt;</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u56E0\u4E3A\u7F51\u7EDC\u539F\u56E0\uFF0Cresponse\u6CA1\u6709\uFF0C\u7ED9\u63D0\u793A\u6D88\u606F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Toast<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;\u7F51\u7EDC\u7E41\u5FD9\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="\u901A\u7528\u7EC4\u4EF6\u6539\u9020" tabindex="-1"><a class="header-anchor" href="#\u901A\u7528\u7EC4\u4EF6\u6539\u9020" aria-hidden="true">#</a> \u901A\u7528\u7EC4\u4EF6\u6539\u9020</h1><h2 id="icon\u7EC4\u4EF6\u4FEE\u6539" tabindex="-1"><a class="header-anchor" href="#icon\u7EC4\u4EF6\u4FEE\u6539" aria-hidden="true">#</a> Icon\u7EC4\u4EF6\u4FEE\u6539</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> classNames <span class="token keyword">from</span> <span class="token string">&#39;classnames&#39;</span>

type Props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> string
  className<span class="token operator">?</span><span class="token operator">:</span> string
  onClick<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Icon</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> type<span class="token punctuation">,</span> className<span class="token punctuation">,</span> <span class="token operator">...</span>rest <span class="token punctuation">}</span><span class="token operator">:</span> Props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>rest<span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">classNames</span><span class="token punctuation">(</span><span class="token string">&#39;icon&#39;</span><span class="token punctuation">,</span> className<span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name">xlinkHref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">#</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Icon

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="typescript\u4E2Dref\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#typescript\u4E2Dref\u7684\u4F7F\u7528" aria-hidden="true">#</a> typescript\u4E2Dref\u7684\u4F7F\u7528</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">const</span> imgRef <span class="token operator">=</span> useRef<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HTMLImageElement</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(null)

const current = imgRef.current!
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="img\u61D2\u52A0\u8F7D\u7EC4\u4EF6\u4FEE\u6539" tabindex="-1"><a class="header-anchor" href="#img\u61D2\u52A0\u8F7D\u7EC4\u4EF6\u4FEE\u6539" aria-hidden="true">#</a> Img\u61D2\u52A0\u8F7D\u7EC4\u4EF6\u4FEE\u6539</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> classnames <span class="token keyword">from</span> <span class="token string">&#39;classnames&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> Icon <span class="token keyword">from</span> <span class="token string">&#39;../Icon&#39;</span>
<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">&#39;./index.module.scss&#39;</span>
type Props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">src</span><span class="token operator">:</span> string
  className<span class="token operator">?</span><span class="token operator">:</span> string
  alt<span class="token operator">?</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">Image</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> className<span class="token punctuation">,</span> src<span class="token punctuation">,</span> alt <span class="token punctuation">}</span><span class="token operator">:</span> Props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> imgRef <span class="token operator">=</span> useRef<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HTMLImageElement</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(null)
  // \u63A7\u5236\u662F\u5426\u5728\u52A0\u8F7D
  const [loading, setLoading] = useState(true)
  // \u63A7\u5236\u662F\u5426\u52A0\u8F7D\u5931\u8D25
  const [error, setError] = useState(false)

  // \u52A0\u8F7D\u6210\u529F
  const onLoad = () =&gt; </span><span class="token punctuation">{</span>
    <span class="token function">setError</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token plain-text">
  const onError = () =&gt; </span><span class="token punctuation">{</span>
    <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token function">setError</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token plain-text">
  useEffect(() =&gt; </span><span class="token punctuation">{</span>
    <span class="token comment">// \u76D1\u542C\u56FE\u7247</span>
    <span class="token keyword">const</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntersectionObserver</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span><span class="token punctuation">{</span> isIntersecting <span class="token punctuation">}</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isIntersecting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u56FE\u7247\u5728\u53EF\u89C6\u533A</span>
        <span class="token keyword">const</span> current <span class="token operator">=</span> imgRef<span class="token punctuation">.</span>current<span class="token operator">!</span>
        current<span class="token punctuation">.</span>src <span class="token operator">=</span> current<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>src<span class="token operator">!</span>
        <span class="token comment">// \u53D6\u6D88\u76D1\u542C</span>
        observer<span class="token punctuation">.</span><span class="token function">unobserve</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>imgRef<span class="token punctuation">.</span>current<span class="token operator">!</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token plain-text">, [])
  return (
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">classnames</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>root<span class="token punctuation">,</span> className<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span><span class="token comment">/* \u52A0\u8F7D\u4E2D */</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token punctuation">{</span>loading <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image-icon<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>iconphoto<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">

      </span><span class="token punctuation">{</span><span class="token comment">/* \u52A0\u8F7D\u51FA\u9519\u65F6\u663E\u793A\u7684\u5185\u5BB9 */</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token punctuation">{</span>error <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image-icon<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>iconphoto-fail<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">

      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
        <span class="token attr-name">alt</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>alt<span class="token punctuation">}</span></span>
        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>imgRef<span class="token punctuation">}</span></span>
        <span class="token attr-name">data-src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>src<span class="token punctuation">}</span></span>
        <span class="token attr-name">onLoad</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onLoad<span class="token punctuation">}</span></span>
        <span class="token attr-name">onError</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onError<span class="token punctuation">}</span></span>
      <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  )
}

export default Image

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="input\u7EC4\u4EF6\u4FEE\u6539" tabindex="-1"><a class="header-anchor" href="#input\u7EC4\u4EF6\u4FEE\u6539" aria-hidden="true">#</a> Input\u7EC4\u4EF6\u4FEE\u6539</h2><ul><li>\u57FA\u672C\u6539\u9020</li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">&#39;./index.module.scss&#39;</span>
<span class="token keyword">import</span> classNames <span class="token keyword">from</span> <span class="token string">&#39;classnames&#39;</span>
<span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token punctuation">{</span>
  extra<span class="token operator">?</span><span class="token operator">:</span> string
  onExtraClick<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  className<span class="token operator">?</span><span class="token operator">:</span> string
  autoFocus<span class="token operator">?</span><span class="token operator">:</span> boolean
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Input</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>
  extra<span class="token punctuation">,</span>
  onExtraClick<span class="token punctuation">,</span>
  className<span class="token punctuation">,</span>
  autoFocus<span class="token punctuation">,</span>
  <span class="token operator">...</span>rest
<span class="token punctuation">}</span><span class="token operator">:</span> Props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// focus</span>
  <span class="token keyword">const</span> inputRef <span class="token operator">=</span> useRef<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HTMLInputElement</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(null)
  useEffect(() =&gt; </span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>autoFocus<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      inputRef<span class="token punctuation">.</span>current<span class="token operator">?.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token plain-text">, [autoFocus])
  return (
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>root<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span></span>
        <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">classNames</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span> className<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
        <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>rest<span class="token punctuation">}</span></span>
      <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span>extra <span class="token operator">?</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>extra<span class="token punctuation">&quot;</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onExtraClick<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token punctuation">{</span>extra<span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  )
}

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5269\u4F59\u53C2\u6570\u7684\u652F\u6301</li></ul><blockquote><p>InputHTMLAttributes\u4E2D\u5305\u542B\u4E86Input\u6846\u6240\u6709\u80FD\u591F\u652F\u6301\u7684\u5C5E\u6027</p></blockquote><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token keyword">extends</span> <span class="token class-name">InputHTMLAttributes</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HTMLInputElement</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"> </span><span class="token punctuation">{</span>
  extra<span class="token operator">?</span><span class="token operator">:</span> string
  onExtraClick<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  className<span class="token operator">?</span><span class="token operator">:</span> string
  autoFocus<span class="token operator">?</span><span class="token operator">:</span> boolean
<span class="token punctuation">}</span><span class="token plain-text">
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4F7F\u7528type\u66FF\u4EE3interface</li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code>type Props <span class="token operator">=</span> <span class="token punctuation">{</span>
  extra<span class="token operator">?</span><span class="token operator">:</span> string
  onExtraClick<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  className<span class="token operator">?</span><span class="token operator">:</span> string
  autoFocus<span class="token operator">?</span><span class="token operator">:</span> boolean
  type<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;password&#39;</span>
<span class="token punctuation">}</span> <span class="token operator">&amp;</span> InputHTMLAttributes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HTMLInputElement</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TS \u4E2D\u7684 &amp;\uFF08\u4EA4\u53C9\u7C7B\u578B\uFF09</p><p>https://www.typescriptlang.org/docs/handbook/2/objects.html#intersection-types</p><ul><li>\u4EA4\u53C9\u7C7B\u578B\uFF1A<code>&amp;</code><ul><li>\u4F5C\u7528\uFF1A\u53EF\u4EE5\u7406\u89E3\u4E3A\u53D6\u591A\u4E2A\u7C7B\u578B\u7684\u5E76\u96C6</li></ul></li><li>\u8054\u60F3\u5230\u4E86\uFF0C\u53E6\u4E00\u4E2A\u7C7B\u578B\uFF1A<code>|</code> \u8054\u5408\u7C7B\u578B</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// | \u5728 TS \u4E2D\u8868\u793A\uFF1A number \u548C string \u4E24\u8005\u4E2D\u51FA\u73B0\u54EA\u4E00\u4E2A\u90FD\u884C</span>
<span class="token keyword">type</span> <span class="token class-name">NumStr</span> <span class="token operator">=</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span>

<span class="token keyword">type</span> <span class="token class-name">InputProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  extra<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
  onExtraClick<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  className<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
  dom<span class="token operator">?</span><span class="token operator">:</span> React<span class="token punctuation">.</span>RefObject<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>

<span class="token comment">// &amp; \u5728 TS \u4E2D\u8868\u793A\uFF1A \u6700\u7EC8\u7684\u7C7B\u578B\u4E24\u8005\u90FD\u6709</span>
<span class="token keyword">type</span> <span class="token class-name">Props</span> <span class="token operator">=</span> InputProps <span class="token operator">&amp;</span> InputHTMLAttributes<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EA4\u53C9\u7C7B\u578B\u9700\u8981\u6CE8\u610F\u7684\u5730\u65B9\uFF1A\u540C\u540D\u7684\u5C5E\u6027\u5BB9\u6613\u51B2\u7A81</p><p>\u4F7F\u7528omit\u4F18\u5316</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">Props</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>
  InputHTMLAttributes<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;type&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;autoFocus&#39;</span>
<span class="token operator">&gt;</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
  extra<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
  onExtraClick<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  className<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
  autoFocus<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
  type<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;password&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="textarea\u7EC4\u4EF6\u6539\u9020" tabindex="-1"><a class="header-anchor" href="#textarea\u7EC4\u4EF6\u6539\u9020" aria-hidden="true">#</a> Textarea\u7EC4\u4EF6\u6539\u9020</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> classNames <span class="token keyword">from</span> <span class="token string">&#39;classnames&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> TextareaHTMLAttributes <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;hoist-non-react-statics/node_modules/@types/react&#39;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">&#39;./index.module.scss&#39;</span>
type Props <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>
  TextareaHTMLAttributes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HTMLTextAreaElement</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">,
  &#39;maxLength&#39; | &#39;value&#39; | &#39;onChange&#39;
&gt; &amp; </span><span class="token punctuation">{</span>
  maxLength<span class="token operator">?</span><span class="token operator">:</span> number
  className<span class="token operator">?</span><span class="token operator">:</span> string
  <span class="token literal-property property">value</span><span class="token operator">:</span> string
  <span class="token literal-property property">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> React<span class="token punctuation">.</span>ChangeEvent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HTMLTextAreaElement</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">) =&gt; void
}
export default function Textarea({
  maxLength = 100,
  className,
  value,
  onChange,
  ...rest
}: Props) </span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>content<span class="token punctuation">,</span> setContent<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>value <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> handleChange <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> React<span class="token punctuation">.</span>ChangeEvent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HTMLTextAreaElement</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">) =&gt; </span><span class="token punctuation">{</span>
    <span class="token function">setContent</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span>

    onChange <span class="token operator">&amp;&amp;</span> <span class="token function">onChange</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token plain-text">
  const textRef = useRef</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HTMLTextAreaElement</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(null)
  useEffect(() =&gt; </span><span class="token punctuation">{</span>
    textRef<span class="token punctuation">.</span>current<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    textRef<span class="token punctuation">.</span>current<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">setSelectionRange</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token plain-text">, [])
  return (
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>root<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span><span class="token comment">/* \u6587\u672C\u8F93\u5165\u6846 */</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span>
        <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>rest<span class="token punctuation">}</span></span>
        <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">classNames</span><span class="token punctuation">(</span><span class="token string">&#39;textarea&#39;</span><span class="token punctuation">,</span> className<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">maxLength</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>maxLength<span class="token punctuation">}</span></span>
        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>textRef<span class="token punctuation">}</span></span>
      <span class="token punctuation">/&gt;</span></span><span class="token plain-text">

      </span><span class="token punctuation">{</span><span class="token comment">/* \u5F53\u524D\u5B57\u6570/\u6700\u5927\u5141\u8BB8\u5B57\u6570 */</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>count<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token punctuation">{</span>content<span class="token punctuation">.</span>length<span class="token punctuation">}</span><span class="token plain-text">/</span><span class="token punctuation">{</span>maxLength<span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  )
}

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="navbar\u7EC4\u4EF6\u6539\u9020" tabindex="-1"><a class="header-anchor" href="#navbar\u7EC4\u4EF6\u6539\u9020" aria-hidden="true">#</a> NavBar\u7EC4\u4EF6\u6539\u9020</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> Icon <span class="token keyword">from</span> <span class="token string">&#39;@/components/Icon&#39;</span>
<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">&#39;./index.module.scss&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useHistory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-router&#39;</span>
<span class="token keyword">import</span> classNames <span class="token keyword">from</span> <span class="token string">&#39;classnames&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ReactNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token comment">// import { withRouter } from &#39;react-router-dom&#39;</span>
<span class="token comment">// 1. withRouter\u7684\u4F7F\u7528</span>
<span class="token comment">// history match location: \u8FD9\u4E2A\u7EC4\u4EF6\u5FC5\u987B\u662F\u901A\u8FC7\u8DEF\u7531\u914D\u7F6E\u7684  &lt;Route&gt;&lt;/Route&gt;</span>
<span class="token comment">// \u81EA\u5DF1\u6E32\u67D3\u7684\u7EC4\u4EF6\uFF0C\u65E0\u6CD5\u83B7\u53D6\u5230\u8DEF\u7531\u4FE1\u606F  &lt;NavBar&gt;&lt;/NavBar&gt;</span>

<span class="token comment">// 2. \u8DEF\u7531\u63D0\u4F9B\u4E86\u51E0\u4E2A\u548C\u8DEF\u7531\u76F8\u5173\u7684hook</span>
<span class="token comment">// useHistory  useLocation  useParams</span>
type Props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">children</span><span class="token operator">:</span> string <span class="token operator">|</span> ReactNode
  extra<span class="token operator">?</span><span class="token operator">:</span> string
  onLeftClick<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  className<span class="token operator">?</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">NavBar</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> children<span class="token punctuation">,</span> extra<span class="token punctuation">,</span> onLeftClick<span class="token punctuation">,</span> className <span class="token punctuation">}</span><span class="token operator">:</span> Props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> history <span class="token operator">=</span> <span class="token function">useHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token function-variable function">back</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// \u8DF3\u56DE\u4E0A\u4E00\u9875</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>onLeftClick<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">onLeftClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">classNames</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>root<span class="token punctuation">,</span> className<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span><span class="token comment">/* \u540E\u9000\u6309\u94AE */</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>left<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>iconfanhui<span class="token punctuation">&quot;</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>back<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span><span class="token comment">/* \u5C45\u4E2D\u6807\u9898 */</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">

      </span><span class="token punctuation">{</span><span class="token comment">/* \u53F3\u4FA7\u5185\u5BB9 */</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>extra<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> NavBar

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="authroute\u7EC4\u4EF6\u6539\u9020" tabindex="-1"><a class="header-anchor" href="#authroute\u7EC4\u4EF6\u6539\u9020" aria-hidden="true">#</a> AuthRoute\u7EC4\u4EF6\u6539\u9020</h2><p>https://stackoverflow.com/questions/53104165/implement-react-router-privateroute-in-typescript-project/53111155#</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> hasToken <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/storage&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Route<span class="token punctuation">,</span> Redirect<span class="token punctuation">,</span> useLocation<span class="token punctuation">,</span> RouteProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-router-dom&#39;</span>
<span class="token keyword">interface</span> <span class="token class-name">PrivateRouteProps</span> <span class="token keyword">extends</span> <span class="token class-name">RouteProps</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">component</span><span class="token operator">:</span> React<span class="token punctuation">.</span>ComponentType<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>any</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
}
export default function AuthRoute(props: PrivateRouteProps) </span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">component</span><span class="token operator">:</span> Component<span class="token punctuation">,</span> <span class="token operator">...</span>rest <span class="token punctuation">}</span> <span class="token operator">=</span> props
  <span class="token keyword">const</span> location <span class="token operator">=</span> <span class="token function">useLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// console.log(location)</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Route
      <span class="token punctuation">{</span><span class="token operator">...</span>rest<span class="token punctuation">}</span>
      render<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Component</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Component</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Redirect</span></span>
              <span class="token attr-name">to</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
                <span class="token literal-property property">pathname</span><span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                  <span class="token comment">// \u4ECE\u54EA\u513F\u6765\u7684</span>
                  <span class="token literal-property property">from</span><span class="token operator">:</span> location<span class="token punctuation">.</span>pathname<span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
            <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Redirect</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token operator">&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Route</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token plain-text">

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="\u9875\u9762\u6539\u9020" tabindex="-1"><a class="header-anchor" href="#\u9875\u9762\u6539\u9020" aria-hidden="true">#</a> \u9875\u9762\u6539\u9020</h1><h2 id="layout\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#layout\u7EC4\u4EF6" aria-hidden="true">#</a> Layout\u7EC4\u4EF6</h2><p>\u76F4\u63A5\u628Ajs\u6539\u6210tsx</p><h1 id="login\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#login\u7EC4\u4EF6" aria-hidden="true">#</a> Login\u7EC4\u4EF6</h1><h3 id="location\u7684\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#location\u7684\u5904\u7406" aria-hidden="true">#</a> location\u7684\u5904\u7406</h3><p><img src="https://wuxiaohui-1254415986.cos.ap-nanjing.myqcloud.com/2022/01/30/image20210917205318957.png" alt="image-20210917205318957" loading="lazy"></p><ul><li>\u5173\u4E8EuseLocation\u7684\u4F7F\u7528</li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code>type LocationState <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">from</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>

<span class="token keyword">const</span> location <span class="token operator">=</span> useLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LocationState</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">()
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>https://stackoverflow.com/questions/61668623/react-typescript-correct-type-for-uselocation-from-react-router-dom</p><h3 id="redux-action\u4FEE\u6539" tabindex="-1"><a class="header-anchor" href="#redux-action\u4FEE\u6539" aria-hidden="true">#</a> redux-action\u4FEE\u6539</h3><ul><li>\u4FEE\u6539action/login.js</li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> request <span class="token keyword">from</span> <span class="token string">&#39;@/utils/request&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> setTokenInfo<span class="token punctuation">,</span> removeTokenInfo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/storage&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Dispatch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;redux&#39;</span>
type Token <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">token</span><span class="token operator">:</span> string
  <span class="token literal-property property">refresh_token</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">sendCode</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">mobile</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53D1\u9001\u8BF7\u6C42</span>
    <span class="token keyword">await</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/sms/codes/&#39;</span> <span class="token operator">+</span> mobile<span class="token punctuation">,</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">saveToken</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">payload</span><span class="token operator">:</span> Token</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;login/token&#39;</span><span class="token punctuation">,</span>
    payload<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u767B\u5F55\u529F\u80FD
 * @param {*} data
 * @returns
 */</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">login</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">mobile</span><span class="token operator">:</span> string<span class="token punctuation">;</span> code<span class="token operator">:</span> string <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">dispatch</span><span class="token operator">:</span> Dispatch</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/authorizations&#39;</span><span class="token punctuation">,</span>
      data<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// \u4FDD\u5B58token\u5230redux\u4E2D</span>
    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">saveToken</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// \u4FDD\u5B58\u5230\u672C\u5730</span>
    <span class="token function">setTokenInfo</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u9000\u51FA
 * @returns
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">logout</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">dispatch</span><span class="token operator">:</span> Dispatch</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">removeTokenInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;login/logout&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Dispatch\u7684\u5206\u6790</li></ul><p>\u7D22\u5F15\u7B7E\u540D</p>`,49),m={href:"https://www.typescriptlang.org/docs/handbook/2/objects.html#index-signatures",target:"_blank",rel:"noopener noreferrer"},b=a("\u7D22\u5F15\u7B7E\u540D"),g=n("li",null,[a("\u8BED\u6CD5\uFF1A"),n("code",null,"[key: string]: any")],-1),y=n("li",null,"\u5E94\u7528\u573A\u666F\uFF1A\u6211\u8981\u4F7F\u7528\u4E00\u4E2A\u5BF9\u8C61\u7C7B\u578B\uFF0C\u4F46\u662F\uFF0C\u6211\u4E0D\u786E\u5B9A\u5BF9\u8C61\u4E2D\u6709\u4EC0\u4E48\u5C5E\u6027\uFF0C\u6B64\u65F6\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528\u7D22\u5F15\u7B7E\u540D\u7C7B\u578B\u4E86",-1),h=s(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u53EF\u4EE5\u5C06\u8FD9\u4E2A\u5185\u5BB9\u5206\u4E3A\u4E24\u90E8\u5206\uFF0C</span>
<span class="token comment">//  \u5192\u53F7\u524D\u9762 \`[extraProps: string]\` \u8868\u793A\u5BF9\u8C61\u4E2D\u7684\u5C5E\u6027\u7C7B\u578B - \u952E</span>
<span class="token comment">//  \u5192\u53F7\u540E\u9762 \`any\` \u8868\u793A\u5C5E\u6027\u503C\u7684\u7C7B\u578B - \u503C</span>

<span class="token comment">// [extraProps: string] \u8868\u793A\uFF1A</span>
<span class="token comment">//  extraProps \u662F\u4E00\u4E2A\u4EFB\u610F\u5408\u6CD5\u5C5E\u6027\u540D\u79F0\uFF0C\u6BD4\u5982\uFF0C\u53EF\u4EE5\u53EB\uFF1Ak \u6216 key</span>
<span class="token comment">//  : string \u8868\u793A\u5BF9\u8C61\u5C5E\u6027\u7684\u7C7B\u578B\u662F \u5B57\u7B26\u4E32 \u7C7B\u578B</span>

<span class="token comment">// \u6CE8\u610F\uFF1A\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5B83\u7684\u5C5E\u6027\u7C7B\u578B\u53EF\u4EE5\u662F\uFF1A string | number | symbol</span>
<span class="token keyword">interface</span> <span class="token class-name">AnyAction</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>extraProps<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">AnyAction</span> <span class="token keyword">extends</span> <span class="token class-name">Action</span> <span class="token punctuation">{</span>
  <span class="token comment">// Allows any extra properties to be defined in an action.</span>
  <span class="token punctuation">[</span>extraProps<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="redux-reducer\u4FEE\u6539" tabindex="-1"><a class="header-anchor" href="#redux-reducer\u4FEE\u6539" aria-hidden="true">#</a> redux-reducer\u4FEE\u6539</h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code>type Token <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">token</span><span class="token operator">:</span> string
  <span class="token literal-property property">refresh_token</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
type ActionType <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;login/token&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;login/logout&#39;</span>
  <span class="token literal-property property">payload</span><span class="token operator">:</span> Token
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token literal-property property">initValue</span><span class="token operator">:</span> Token <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">token</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">refresh_token</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">reducer</span><span class="token punctuation">(</span><span class="token parameter">state <span class="token operator">=</span> initValue<span class="token punctuation">,</span> <span class="token literal-property property">action</span><span class="token operator">:</span> ActionType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> payload <span class="token punctuation">}</span> <span class="token operator">=</span> action
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;login/token&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> payload
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;login/logout&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> state
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7C7B\u578B\u63D0\u53D6" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u63D0\u53D6" aria-hidden="true">#</a> \u7C7B\u578B\u63D0\u53D6</h3><ul><li>types.d.ts</li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">/**
 * token\u7684\u7C7B\u578B
 */</span>
<span class="token keyword">export</span> type Token <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">token</span><span class="token operator">:</span> string
  <span class="token literal-property property">refresh_token</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="profile\u7EC4\u4EF6\u6539\u9020" tabindex="-1"><a class="header-anchor" href="#profile\u7EC4\u4EF6\u6539\u9020" aria-hidden="true">#</a> Profile\u7EC4\u4EF6\u6539\u9020</h1><h2 id="\u4FEE\u6539redux" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u6539redux" aria-hidden="true">#</a> \u4FEE\u6539redux</h2><h2 id="\u6CDB\u578B\u5DE5\u5177\u7C7B\u578B-returntype" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B\u5DE5\u5177\u7C7B\u578B-returntype" aria-hidden="true">#</a> \u6CDB\u578B\u5DE5\u5177\u7C7B\u578B - ReturnType</h2><ul><li>\u6CDB\u578B\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">id</span><span class="token generic class-name"><span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>value<span class="token operator">:</span> Type<span class="token punctuation">)</span><span class="token operator">:</span> Type <span class="token punctuation">{</span>
  <span class="token keyword">return</span> value
<span class="token punctuation">}</span>

<span class="token comment">// \u5C16\u62EC\u53F7\u4E2D\u51FA\u73B0\u7684\u662F \u7C7B\u578B</span>
<span class="token generic-function"><span class="token function">id</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token generic-function"><span class="token function">id</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>ReturnType <ul><li>\u4F5C\u7528\uFF1A<strong>\u7528\u6765\u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7684\u7C7B\u578B</strong></li></ul></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">10</span>

<span class="token comment">// typeof fn \u7684\u7ED3\u679C\uFF1A () =&gt; number</span>
<span class="token comment">// R1 =&gt; number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">R1</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> fn<span class="token operator">&gt;</span>
<span class="token comment">// type R1 = ReturnType&lt;() =&gt; number&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u83B7\u53D6redux\u72B6\u6001\u7684\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6redux\u72B6\u6001\u7684\u7C7B\u578B" aria-hidden="true">#</a> \u83B7\u53D6redux\u72B6\u6001\u7684\u7C7B\u578B</h2><p>https://redux.js.org/usage/usage-with-typescript</p><ul><li>\u8BB2store/index.js\u4FEE\u6539\u4E3Astore/index.ts</li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// \u53C2\u65701\uFF1Areducer</span>
<span class="token comment">// \u53C2\u65702\uFF1A\u6307\u5B9Astore\u7684\u521D\u59CB\u503C</span>
<span class="token comment">// \u53C2\u65703\uFF1A\u6307\u5B9A\u4E2D\u95F4\u4EF6</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>
  reducer<span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">login</span><span class="token operator">:</span> <span class="token function">getTokenInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">composeWithDevTools</span><span class="token punctuation">(</span><span class="token function">applyMiddleware</span><span class="token punctuation">(</span>thunk<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token keyword">export</span> type RootState <span class="token operator">=</span> ReturnType<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeof</span> <span class="token attr-name">store.getState</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="useselector-\u7684\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#useselector-\u7684\u7C7B\u578B" aria-hidden="true">#</a> useSelector \u7684\u7C7B\u578B</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5728 TS \u4E2D useSelector \u662F\u4E00\u4E2A\u6CDB\u578B\u51FD\u6570\uFF0C\u5E76\u4E14\u5B83\u6709\u4E24\u4E2A\u6CDB\u578B\u53D8\u91CF\uFF0C\u5206\u522B\u662F\uFF1A</span>
<span class="token comment">// 1 \u6574\u4E2ARedux\u5E94\u7528\u7684\u72B6\u6001\u7C7B\u578B</span>
<span class="token comment">// 2 \u5F53\u524D\u8981\u83B7\u53D6\u7684\u72B6\u6001\u7C7B\u578B</span>
<span class="token comment">// \u56E0\u6B64\uFF0C\u5728\u4F7F\u7528\u7684\u65F6\u5019\uFF0C\u9700\u8981\u4F20\u5165\u4E24\u4E2A \u6CDB\u578B\u53D8\u91CF\uFF1A</span>
<span class="token comment">// \u6BD4\u5982\uFF0C\u4EE5\u4E0B\u4EE3\u7801\u4E2D\uFF0C</span>
<span class="token comment">// \u7B2C\u4E00\u4E2A\u4F20\u5165\u4E86 AppState \u4E5F\u5C31\u662F\u6574\u4E2A Redux \u5E94\u7528\u7684\u72B6\u6001\u7C7B\u578B</span>
<span class="token comment">// \u7B2C\u4E8C\u4E2A\u4F20\u5165\u4E86 AppState[&#39;profile&#39;] \u4E5F\u5C31\u662F\u5F53\u524D\u8981\u83B7\u53D6\u7684 profile \u72B6\u6001\u7684\u7C7B\u578B</span>

<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useSelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>RootState<span class="token punctuation">,</span> RootState<span class="token punctuation">[</span><span class="token string">&#39;profile&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>profile<span class="token punctuation">.</span>user
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ts-\u4E2D\u7684\u7D22\u5F15\u67E5\u8BE2\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#ts-\u4E2D\u7684\u7D22\u5F15\u67E5\u8BE2\u7C7B\u578B" aria-hidden="true">#</a> TS \u4E2D\u7684\u7D22\u5F15\u67E5\u8BE2\u7C7B\u578B</h2><ul><li>\u8BED\u6CD5\uFF1A<code>\u5BF9\u8C61\u7C7B\u578B[\u952E]</code></li><li>\u4F5C\u7528\uFF1A\u67E5\u8BE2 \u5BF9\u8C61\u7C7B\u578B \u4E2D\u67D0\u4E2A\u5C5E\u6027\u5BF9\u5E94\u7684\u7C7B\u578B</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">// NameType =&gt; string</span>
<span class="token keyword">type</span> <span class="token class-name">NameTyep</span> <span class="token operator">=</span> <span class="token constant">A</span><span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4FEE\u6539aciton" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u6539aciton" aria-hidden="true">#</a> \u4FEE\u6539aciton</h2>`,23);function x(f,w){const t=o("ExternalLinkIcon");return c(),l(i,null,[r,n("p",null,[n("a",k,[d,e(t)])]),v,n("ul",null,[n("li",null,[n("a",m,[b,e(t)])]),g,y]),h],64)}var N=p(u,[["render",x],["__file","05-\u4F7F\u7528Typescript\u6539\u9020\u9879\u76EE.html.vue"]]);export{N as default};
