import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as t}from"./app.88f692a7.js";const p={},o=t(`<h2 id="\u81EA\u5B9A\u4E49\u8BF7\u6C42hook" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u8BF7\u6C42hook" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u8BF7\u6C42Hook</h2><h2 id="\u4E00\u3001\u5C01\u88C5\u57FA\u7840\u7684http\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u5C01\u88C5\u57FA\u7840\u7684http\u8BF7\u6C42" aria-hidden="true">#</a> \u4E00\u3001\u5C01\u88C5\u57FA\u7840\u7684http\u8BF7\u6C42</h2><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><ol><li>\u5B9A\u4E49\u914D\u7F6E\u9879\u7C7B\u578B\uFF0C\u540C\u65F6\u52A0\u5165\u81EA\u5DF1\u7684\u914D\u7F6E\u53C2\u6570</li><li>\u5F15\u5165\u73AF\u5883\u53D8\u91CF\u7684\u57FA\u51C6url</li></ol></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>const url = p<wbr>rocess.env.REACT_APP_API_URL;

interface Config extends RequestInit {
  token?: string;
  data?: object;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u5C01\u88C5http\u8BF7\u6C42</p><p>\u4F7F\u7528\u4F20\u5165\u7684\u53C2\u6570\u8986\u76D6\u9ED8\u8BA4\u7684\u8BF7\u6C42\u53C2\u6570(\u8DEF\u5F84\u548C\u53C2\u6570\u52A8\u6001\u4F20\u5165)</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// axios ==&gt; 401 \u5185\u90E8\u4F1A\u629B\u9519</span>
<span class="token comment">// fetch ==&gt; \u72B6\u6001\u7801\u9519\u8BEF\u4E0D\u4F1A\u629B\u9519</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>
  <span class="token literal-property property">endPoint</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token comment">// \u4F20\u5165\u7684\u63A5\u53E3\u8DEF\u5F84</span>
  <span class="token punctuation">{</span> data<span class="token punctuation">,</span> token<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> <span class="token operator">...</span>customConfig <span class="token punctuation">}</span><span class="token operator">:</span> Config <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// \u5176\u4ED6\u7684\u4E00\u4E9B\u914D\u7F6E\u9879\uFF0C\u5982\u679C\u6CA1\u6709\u7ED9\u4E00\u4E2A\u9ED8\u8BA4\u7684\u7A7A\u5BF9\u8C61</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">Authorization</span><span class="token operator">:</span> token <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">// token\u62FC\u63A5</span>
      <span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> data <span class="token operator">?</span> <span class="token string">&quot;application/json&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// \u8BBE\u7F6Econtent-type</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>customConfig<span class="token punctuation">,</span> <span class="token comment">// \u4F20\u5165\u7684\u914D\u7F6E\u9879\u8986\u76D6\u9ED8\u8BA4\u7684\u914D\u7F6E\u9879</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5224\u65AD\u8BF7\u6C42\u7C7B\u578B</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>method<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    endPoint <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u53D1\u8D77\u8BF7\u6C42</span>
  <span class="token comment">// \u5185\u90E8\u5DF2\u7ECF\u628A\u9519\u8BEF\u548C\u6210\u529F\u7684\u6570\u636E\u8FDB\u884C\u4E86\u5904\u7406</span>
  <span class="token comment">// \u5982\u679C\u63A5\u53E3\u8FD4\u56DE401 ==&gt; \u6267\u884C\u9000\u51FA\u767B\u5F55\u7684\u64CD\u4F5C</span>
  <span class="token keyword">return</span> window<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>endPoint<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8DDF\u4E1A\u52A1\u6216\u8005\u9879\u76EE\u76F8\u5173\u7684\u9000\u51FA\u64CD\u4F5C</span>
      <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u91CD\u65B0\u767B\u5F55&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> data<span class="token punctuation">;</span> <span class="token comment">// \u5982\u679C\u63A5\u53E3\u8BF7\u6C42\u6210\u529F\uFF0C\u76F4\u63A5\u8FD4\u56DE\u6570\u636E</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u63A5\u53E3\u5931\u8D25\uFF0C\u9700\u8981\u624B\u52A8return reject\u72B6\u6001\u7684promise</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u4F7F\u7528\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">http</span><span class="token punctuation">(</span>endPoint<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>config<span class="token punctuation">,</span>
  <span class="token literal-property property">token</span><span class="token operator">:</span> user<span class="token operator">?.</span>token<span class="token punctuation">,</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u83B7\u53D6\u6210\u529F\u7684\u7ED3\u679C&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u83B7\u53D6\u5931\u8D25\u7684\u72B6\u6001&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="\u4E8C\u3001\u5C01\u88C5usehttp-hook-\u65B9\u4FBF\u628Atoken\u81EA\u52A8\u6CE8\u5165" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u5C01\u88C5usehttp-hook-\u65B9\u4FBF\u628Atoken\u81EA\u52A8\u6CE8\u5165" aria-hidden="true">#</a> \u4E8C\u3001\u5C01\u88C5useHttp hook,\u65B9\u4FBF\u628Atoken\u81EA\u52A8\u6CE8\u5165</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">useHttp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// user\u91CC\u9762\u5305\u542Btoken\uFF0C\u4E0D\u540C\u7684\u9879\u76EE\uFF0C\u83B7\u53D6\u7684\u65B9\u6CD5\u4E0D\u540C\uFF0C\u81EA\u5DF1\u6309\u7167\u81EA\u5DF1\u9879\u76EE\u65B9\u6CD5\u83B7\u53D6\u5373\u53EF</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> user <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
  <span class="token comment">// \u8FD9\u91CC\u4F7F\u7528http\u65B9\u6CD5\u4F20\u5165\u7684\u7C7B\u578B\uFF0C\u4E0D\u9700\u8981\u518D\u6B21\u5904\u7406</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span><span class="token punctuation">[</span>endPoint<span class="token punctuation">,</span> config<span class="token punctuation">]</span><span class="token operator">:</span> Parameters<span class="token operator">&lt;</span><span class="token keyword">typeof</span> http<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token function">http</span><span class="token punctuation">(</span>endPoint<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>config<span class="token punctuation">,</span>
      <span class="token literal-property property">token</span><span class="token operator">:</span> user<span class="token operator">?.</span>token<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u4F7F\u7528\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token function">useHttp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">client</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;\u8BF7\u6C42\u7684\u53C2\u6570&#39;</span><span class="token punctuation">,</span> <span class="token operator">...</span>\u5176\u4ED6\u7684\u914D\u7F6E\u9879<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F\u7684\u7ED3\u679C&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;\u5931\u8D25\u7684\u539F\u56E0&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F18\u52BF\uFF1A\u4E0D\u9700\u8981\u6BCF\u6B21\u4F20\u5165token\uFF0C\u4EE5\u53CA\u4E00\u4E9B\u901A\u7528\u7684\u914D\u7F6E\u9879\uFF0C\u90FD\u53EF\u4EE5\u5728useHttp\u65B9\u6CD5\u5185\u90E8\u96C6\u6210</p></div><h2 id="\u4E09\u3001\u5C01\u88C5\u4E00\u4E2A\u66F4\u52A0\u7EC6\u5316\u7684\u8BF7\u6C42\u65B9\u6CD5-useasync" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u5C01\u88C5\u4E00\u4E2A\u66F4\u52A0\u7EC6\u5316\u7684\u8BF7\u6C42\u65B9\u6CD5-useasync" aria-hidden="true">#</a> \u4E09\u3001\u5C01\u88C5\u4E00\u4E2A\u66F4\u52A0\u7EC6\u5316\u7684\u8BF7\u6C42\u65B9\u6CD5 useAsync</h2><div class="custom-container tip"><p class="custom-container-title">\u529F\u80FD</p><ol><li>\u81EA\u52A8\u7BA1\u7406\u8BF7\u6C42\u72B6\u6001 -&gt; \u9519\u8BEF/\u6210\u529F/\u8BF7\u6C42\u4E2D/\u6570\u636E\u8D4B\u503C</li><li>\u81EA\u52A8\u8FD4\u56DE\u6570\u636E</li><li>\u81EA\u52A8\u8C03\u7528\u8BF7\u6C42\u65B9\u6CD5</li><li>\u6D88\u8D39\u8005\u53EA\u9700\u8981\u4F20\u5165\u8BF7\u6C42\u53C2\u6570\uFF0C\u5373\u53EF(\u6B64hook\u4F1A\u8FD4\u56DE\u6240\u9700\u8981\u7684\u4E00\u5207\u6570\u636E)</li></ol></div><blockquote><p>\u5185\u90E8\u5904\u7406\u4E00\u5207\u4E8B\u7269\uFF0C\u628A\u9700\u8981\u7684\u6570\u636E\u76F4\u63A5\u5185\u90E8\u5904\u7406\u8FD4\u56DE\u5373\u53EF</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">State</span><span class="token operator">&lt;</span><span class="token constant">D</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">error</span><span class="token operator">:</span> Error <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token constant">D</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token literal-property property">stat</span><span class="token operator">:</span> <span class="token string">&quot;idle&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;loading&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;error&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token literal-property property">defaultInitialState</span><span class="token operator">:</span> State<span class="token operator">&lt;</span><span class="token keyword">null</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">stat</span><span class="token operator">:</span> <span class="token string">&quot;idle&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> useAsync <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">D</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token parameter">initialState<span class="token operator">?</span><span class="token operator">:</span> State<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  onError<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">err</span><span class="token operator">:</span> Error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span></span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>State<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token operator">...</span>defaultInitialState<span class="token punctuation">,</span>
    <span class="token operator">...</span>initialState<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">setData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token constant">D</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      data<span class="token punctuation">,</span>
      <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token literal-property property">stat</span><span class="token operator">:</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">setError</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">error</span><span class="token operator">:</span> Error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      error<span class="token punctuation">,</span>
      <span class="token literal-property property">stat</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// \u89E6\u53D1\u5F02\u6B65\u8BF7\u6C42</span>
  <span class="token keyword">const</span> <span class="token function-variable function">run</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">promise</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>promise <span class="token operator">||</span> <span class="token operator">!</span>promise<span class="token punctuation">.</span>then<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u4F20\u5165promise\u7C7B\u578B\u6570\u636E&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token operator">...</span>state<span class="token punctuation">,</span>
      <span class="token literal-property property">stat</span><span class="token operator">:</span> <span class="token string">&quot;loading&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> promise
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> data<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>onError<span class="token punctuation">)</span> <span class="token function">onError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">isIdle</span><span class="token operator">:</span> state<span class="token punctuation">.</span>stat <span class="token operator">===</span> <span class="token string">&quot;idle&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">isLoading</span><span class="token operator">:</span> state<span class="token punctuation">.</span>stat <span class="token operator">===</span> <span class="token string">&quot;loading&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">isError</span><span class="token operator">:</span> state<span class="token punctuation">.</span>stat <span class="token operator">===</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">isSuccess</span><span class="token operator">:</span> state<span class="token punctuation">.</span>stat <span class="token operator">===</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">,</span>
    run<span class="token punctuation">,</span>
    setData<span class="token punctuation">,</span>
    setError<span class="token punctuation">,</span>
    <span class="token operator">...</span>state<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u4F7F\u7528\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">List</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">param</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Project<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token function">useHttp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> run<span class="token punctuation">,</span> <span class="token literal-property property">data</span><span class="token operator">:</span> list<span class="token punctuation">,</span> isLoading <span class="token punctuation">}</span> <span class="token operator">=</span> useAsync<span class="token operator">&lt;</span>Project<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> debounceParam <span class="token operator">=</span> <span class="token function">useDebounce</span><span class="token punctuation">(</span>param<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">run</span><span class="token punctuation">(</span><span class="token function">client</span><span class="token punctuation">(</span><span class="token string">&quot;projects&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token function">clearObject</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>debounceParam<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token operator">&lt;</span>Table
      pagination<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span>
      columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
  		dataSource<span class="token operator">=</span><span class="token punctuation">{</span>list<span class="token punctuation">}</span>
  		loading<span class="token operator">=</span><span class="token punctuation">{</span>isLoading<span class="token punctuation">}</span>
    <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="\u56DB\u3001\u7EE7\u7EED\u7EC6\u5316\u8BF7\u6C42\u7684\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#\u56DB\u3001\u7EE7\u7EED\u7EC6\u5316\u8BF7\u6C42\u7684\u5C01\u88C5" aria-hidden="true">#</a> \u56DB\u3001\u7EE7\u7EED\u7EC6\u5316\u8BF7\u6C42\u7684\u5C01\u88C5</h2><div class="custom-container tip"><p class="custom-container-title">\u529F\u80FD</p><ol><li>\u6D89\u53CA\u5230\u5177\u4F53\u7684\u8BF7\u6C42\uFF0C\u6BCF\u4E00\u4E2A\u8BF7\u6C42\u5C01\u88C5\u4E00\u4E2A\u81EA\u5B9A\u4E49hook\uFF0C\u5904\u7406\u4E1A\u52A1\u903B\u8F91</li></ol></div><blockquote><p>\u6848\u4F8B1: \u9700\u6C42-&gt; \u53EA\u9700\u8981\u4F20\u5165\u5373\u53EF\u83B7\u53D6loading/error/data\u7684\u72B6\u6001\uFF0C\u89C6\u56FE\u5C42\u9700\u8981\u8FDB\u884C\u5904\u7406\u5C55\u793A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useAsync <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./use-async&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Project <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../screens/project-list/list&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> clearObject<span class="token punctuation">,</span> useDebounce <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./index&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useHttp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./http&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">useProjects</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">param</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Project<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token function">useHttp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> run<span class="token punctuation">,</span> <span class="token operator">...</span>result <span class="token punctuation">}</span> <span class="token operator">=</span> useAsync<span class="token operator">&lt;</span>Project<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> debounceParam <span class="token operator">=</span> <span class="token function">useDebounce</span><span class="token punctuation">(</span>param<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">run</span><span class="token punctuation">(</span><span class="token function">client</span><span class="token punctuation">(</span><span class="token string">&quot;projects&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token function">clearObject</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>debounceParam<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u4F7F\u7528\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u83B7\u53D6\u7684\u6240\u6709\u72B6\u6001\u76F4\u63A5\u53EF\u7528</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> isLoading<span class="token punctuation">,</span> error<span class="token punctuation">,</span> <span class="token literal-property property">data</span><span class="token operator">:</span> list <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useProjects</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><blockquote><p>\u6848\u4F8B2: \u9700\u6C42 -&gt; \u9875\u9762\u52A0\u8F7D\u53EA\u83B7\u53D6\u4E00\u6B21\u7528\u6237\u4FE1\u606F</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useMount <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./index&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useHttp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./http&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useAsync <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./use-async&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> User <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../screens/project-list/search-panel&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">useUser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">param<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token function">useHttp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> run<span class="token punctuation">,</span> <span class="token operator">...</span>res <span class="token punctuation">}</span> <span class="token operator">=</span> useAsync<span class="token operator">&lt;</span>User<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">useMount</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">run</span><span class="token punctuation">(</span><span class="token function">client</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>res<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u4F7F\u7528\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> users <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div>`,23),e=[o];function c(l,i){return s(),a("div",null,e)}var k=n(p,[["render",c],["__file","1.\u81EA\u5B9A\u4E49\u8BF7\u6C42hook.html.vue"]]);export{k as default};
