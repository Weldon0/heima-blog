import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.e3686eef.js";const t={},e=p(`<h3 id="useimperativehandle\u7684\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#useimperativehandle\u7684\u4F5C\u7528" aria-hidden="true">#</a> useImperativeHandle\u7684\u4F5C\u7528</h3><div class="custom-container tip"><p class="custom-container-title">\u6982\u5FF5</p><ol><li><p>useImperativeHandle \u53EF\u4EE5\u8BA9\u4F60\u5728\u4F7F\u7528 ref \u65F6\u81EA\u5B9A\u4E49\u66B4\u9732\u7ED9\u7236\u7EC4\u4EF6\u7684\u5B9E\u4F8B\u503C\u3002</p></li><li><p>\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C\u5E94\u5F53\u907F\u514D\u4F7F\u7528 ref \u8FD9\u6837\u7684\u547D\u4EE4\u5F0F\u4EE3\u7801\u3002</p></li><li><p>useImperativeHandle \u5E94\u5F53\u4E0E forwardRef \u4E00\u8D77\u4F7F\u7528</p></li></ol></div><h3 id="\u4F7F\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u65B9\u6CD5" aria-hidden="true">#</a> \u4F7F\u7528\u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>Component<span class="token punctuation">,</span> forwardRef<span class="token punctuation">,</span> useImperativeHandle<span class="token punctuation">,</span> useRef<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> intpu1Ref <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> inputRef2 <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> inputRef3 <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token function-variable function">getBody</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">value1</span><span class="token operator">:</span> intpu1Ref<span class="token punctuation">.</span>current<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
      <span class="token literal-property property">value2</span><span class="token operator">:</span> inputRef2<span class="token punctuation">.</span>current<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
      <span class="token literal-property property">value3</span><span class="token operator">:</span> inputRef3<span class="token punctuation">.</span>current<span class="token punctuation">.</span>value
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">useImperativeHandle</span><span class="token punctuation">(</span>
    ref<span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        getBody<span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;text&quot;</span> name<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">}</span> ref<span class="token operator">=</span><span class="token punctuation">{</span>intpu1Ref<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;text&quot;</span> name<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;password&#39;</span><span class="token punctuation">}</span> ref<span class="token operator">=</span><span class="token punctuation">{</span>inputRef2<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;text&quot;</span> name<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;code&#39;</span><span class="token punctuation">}</span> ref<span class="token operator">=</span><span class="token punctuation">{</span>inputRef3<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5982\u679C\u51FD\u6570\u7EC4\u4EF6\u6DFB\u52A0ref\uFF0C\u5B50\u7EC4\u4EF6\u5FC5\u987B\u8981\u4F7F\u7528forwardRef</span>
<span class="token comment">// \u5B50\u7EC4\u4EF6\u7684\u63A5\u6536\uFF1A\u7B2C\u4E00\u4E2A\u53C2\u6570\u662Fprops  \u7B2C\u4E8C\u53C2\u6570\u662Fref</span>
<span class="token keyword">const</span> RefChild <span class="token operator">=</span> <span class="token function">forwardRef</span><span class="token punctuation">(</span>Child<span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">MyComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7236\u7EC4\u4EF6\u91CC\u9762\u8C03\u7528\u5B50\u7EC4\u4EF6\u7684fn\u65B9\u6CD5</span>

  <span class="token keyword">const</span> inputRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">logChild</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>inputRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token number">452423</span>
      <span class="token operator">&lt;</span>hr<span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>RefChild ref<span class="token operator">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>hr<span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>logChild<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token function">\u70B9\u51FB</span><span class="token punctuation">(</span>\u8C03\u7528\u5B50\u7EC4\u4EF6submit\u65B9\u6CD5<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> MyComponent<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[e];function c(l,i){return s(),a("div",null,o)}var k=n(t,[["render",c],["__file","\u6269\u5C55-useImperativeHandle\u7684\u4F7F\u7528.html.vue"]]);export{k as default};
